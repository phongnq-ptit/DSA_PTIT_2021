Một đồ thị N đỉnh là một cây, nếu như nó có đúng N-1 cạnh và giữa 2 đỉnh bất kì, 
chỉ tồn tại duy nhất 1 đường đi giữa chúng.
Cho một đồ thị N đỉnh và N-1 cạnh, hãy kiểm tra đồ thị đã cho có phải là một cây hay không?

Input:
	Dòng đầu tiên là số lượng bộ test T (T ≤ 20).
	Mỗi test bắt đầu bởi số nguyên N (1 ≤ N ≤ 1000).
	N-1 dòng tiếp theo, mỗi dòng gồm 2 số nguyên u, v cho biết có cạnh nối giữa đỉnh u và v.
Output: 
	Với mỗi test, in ra “YES” nếu đồ thị đã cho là một cây, in ra “NO” trong trường hợp ngược lại.


Input

2

4

1 2

1 3

2 4

4

1 2

1 3

2 3

Output

YES

NO

 
#include<bits/stdc++.h>

using namespace std;

vector<int> List[1005];
bool tick[1005];

void reset(){
    for(int i = 1; i <= 1000; i++) List[i].clear();
    memset(tick, false, sizeof(tick));
}

void DFS(int u){
    tick[u] = true;
    for(int i: List[u])
        if(!tick[i])
            DFS(i);
}

bool check(int U){
    for(int i = 1; i <= U; i++)
        if(!tick[i])
            return false;
    return true;
}

void solve(){
    reset();
    int n, u, v; cin>>n;
   for(int i = 0; i < n - 1; i++){
        cin>>u>>v;
        List[u].push_back(v);
        List[v].push_back(u);
    }

    DFS(1);

    cout<<(check(n)? "YES" : "NO")<<endl;
}

int main(){
    ios_base::sync_with_stdio(0); cin.tie(0);
    int a; cin>>a;
    while(a--) solve();
    return 0;
}
 