Cho dãy số A[] gồm n số nguyên dương. 
Tam giác đặc biệt của dãy số A[] là tam giác được tạo ra bởi n hàng, 
trong đó hàng thứ n là dãy số A[], hàng i là tổng hai phần tử liên tiếp của hàng i+1 (1≤i≤n-1). 
Ví dụ A[] = {1, 2, 3, 4, 5}, khi đó tam giác được tạo nên như dưới đây:

[48]

[20, 28]

[8, 12, 16]     

[3, 5, 7, 9 ]

[1, 2, 3, 4, 5 ]

Input:
	Dòng đầu tiên đưa vào số lượng bộ test T.
	Những dòng tiếp theo đưa vào các bộ test. Mỗi bộ test gồm hai dòng: 
		dòng thứ nhất đưa vào N là số lượng phần tử của dãy số A[]; 
		dòng tiếp theo đưa vào N số của mảng A[].
	T, N, A[i] thỏa mãn ràng buộc: 1≤T≤100; 1≤N, A[i] ≤10;
Output:
	Đưa ra kết quả mỗi test theo từng dòng. Mỗi dòng của tam giác tổng được bao bởi ký tự [, ].
Input

1

5

1 2 3 4 5

Output

[48] [20 28] [8 12 16] [3 5 7 9 ] [1 2 3 4 5 ]

 

#include<bits/stdc++.h>

using namespace std;

vector< vector<int> > res;
void output(vector<int> arr, int len){
    cout<<"[";
    for(int i = 0; i < len; i++){
        if(i != len - 1) cout<<arr[i]<<" ";
        else cout<<arr[i];
    }
    cout<<"] ";
}

void back_track(vector<int> arr, int len){
    res.push_back(arr);

    if(len == 1) return;

    for(int i = 0; i < len - 1; i++) arr[i] += arr[i + 1]; 

    back_track(arr, len - 1);
}

void solve(){
    int n; cin>>n;
    vector<int> arr(n);
    for(int i = 0; i < n; i++) cin>>arr[i];

    back_track(arr, n);

    int len = 1;
    for(int i = res.size() - 1; i >= 0; i--){
        output(res[i], len);
        len++;
    }

    cout<<endl;
}

int main(){
    int a; cin>>a;
    while(a--){
        solve();
        res.clear();
    }
    return 0;
}