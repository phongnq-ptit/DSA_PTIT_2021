Cho dãy số A[] = (a1, a2, .., an) và số tự nhiên K. 
Hãy đưa ra tất cả các dãy con của dãy số A[] sao cho tổng các phần tử của dãy con đó đúng bằng K. 
Các phần tử của dãy số A[] được giả thuyết là nguyên dương và không có các phần tử giống nhau. 
Ví dụ với dãy con A[] = {5, 10, 15, 20, 25}, K = 50 ta có 3 dãy con 
	{5, 10, 15, 20}, {5, 20, 25}, {10, 15, 25}.

Input:
	Dòng đầu tiên đưa vào số lượng bộ test T.
	Những dòng kế tiếp đưa vào các bộ test. Mỗi bộ test gồm hai phần: 
		phần thứ nhất đưa vào số N là số lượng phần tử của dãy số A[] và số K; 
		dòng tiếp theo đưa vào N phần tử của dãy số A[].
	T, N, A[i] thỏa mãn ràng buộc: 1≤T ≤100; 1≤N≤10; 1≤ K, A[i] ≤100.
Output:
	Đưa ra tất cả các dãy con của dãy số A[] thỏa mãn yêu cầu bài toán theo thứ tự từ điển, 
	trong đó mỗi dãy con được bao bởi các ký tự [, ]. 
	Nếu không có dãy con nào thỏa mãn yêu cầu bài toán, hãy đưa ra -1.
Input

2
5 50
5  10 15 20  25
8  53
15  22  14  26  32  9  16  8

Output

[5 10 15 20] [5 20 25] [10 15 25]
[8 9 14 22] [8 14 15 16] [15 16 22]

 

#include<bits/stdc++.h>

using namespace std;

int n,k;
bool check = true;
int arr[15];
int binary[15] = {};
vector< vector<int> > ans;

void print_result(vector<int> res){
    int n = res.size();
    cout<<"[";
    for(int i = 0; i < n - 1; i++) cout<<res[i]<<" ";
    cout<<res[n - 1]<<"] ";
}

void handle(){
    vector<int> res;
    for(int i = 1; i <= n; i++)
        if(binary[i] == 1) 
            res.push_back(arr[i]);

    int sum = 0;
    for(int i = 0; i < res.size(); i++) sum += res[i];

    if(sum == k) {
        check = false;
        ans.push_back(res);
    }
}

// sinh xau nhi phan
void back_track(int index){
    for(int i = 0; i <= 1; i++){
        binary[index] = i;
        if(index == n) handle();
        else back_track(index + 1);
    }
}

void solve(){
    cin>>n>>k;
    for(int i = 1; i <= n; i++) cin>>arr[i];
    sort(arr + 1, arr + n + 1);

    back_track(1);
    
    if(ans.empty()) cout<<-1;
    else {
        sort(ans.begin(), ans.end());
        for(int i = 0; i < ans.size(); i++){
            print_result(ans[i]);
        }
    }
    cout<<endl;
}

int main(){
    int a; cin>>a;
    while(a--){
        solve();
        check = true;
        ans.clear();
    }
    return 0;
}