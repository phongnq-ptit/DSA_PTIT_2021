Cho dãy số A[] gồm N phần tử. 
Với mỗi A[i], bạn cần tìm phần tử bên phải đầu tiên lớn hơn nó. 
Nếu không tồn tại, in ra -1.

Input:
	Dòng đầu tiên là số lượng bộ test T (T ≤ 20).
	Mỗi test bắt đầu bởi số nguyên N (1 ≤ N ≤ 100000).
	Dòng tiếp theo gồm N số nguyên A[i] (0 ≤ A[i] ≤ 109).

Output: 
	Với mỗi test, in ra trên một dòng N số R[i], với R[i] là giá trị phần tử đầu tiên lớn hơn A[i].



Input

3

4

4 5 2 25

3

2 2 2

4

4 4 5 5

Output

5 25 25 -1

-1 -1 -1

5 5 -1 -1

 

#include<bits/stdc++.h>

using namespace std;

void solve(){
    int n; cin>>n;
    vector<int> arr(n);
    stack<int> st;
    vector<int> res(n);
    for(auto &x : arr) cin>>x;

    for(int i = n - 1; i >= 0; i--){
        while(!st.empty() && arr[i] >= st.top()) st.pop();
        if(st.empty()) res[i] = -1;
        else res[i] = st.top();
        st.push(arr[i]);
    }

    for(auto i: res) cout<<i<<" ";
    cout<<endl;
}

int main(){
    int a; cin>>a;
    while(a--){
        solve();
    }
    return 0;
}