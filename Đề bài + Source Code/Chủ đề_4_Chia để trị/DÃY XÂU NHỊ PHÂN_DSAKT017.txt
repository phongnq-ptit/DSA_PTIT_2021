Người ta tạo ra một dãy xâu ký tự nhị phân X[] trong đó:

X[1] = “0”

X[2] = “1”

X[n] = X[n-2] + X[n-1] với n>2

Với phép cộng (+) là phép nối hai xâu với nhau. 

Cho hai số tự nhiên N và K (1<N<93; K đảm bảo trong phạm vi của xâu X[N]).

Hãy xác định ký tự thứ K trong xâu X[N] là ký tự ‘0’ hay ký tự ‘1’.

Input: 
	Dòng 1 ghi số bộ test. Mỗi bộ test ghi trên một dòng 2 số nguyên N và K.

Output: 
	Ghi ra màn hình kết quả tương ứng với từng bộ test.


Input

2

6 4

8 19

Output

0

1

 

#include<bits/stdc++.h>

using namespace std;
typedef long long ll;

ll F[105];
void fibo(){
    F[1] = F[2] = 1;
    for(int i = 3; i < 105; i++) F[i] = F[i - 1] + F[i - 2];
}

ll process(ll n, ll k){
    if(n == 1) return 0;
    if(n == 2) return 1;
    if(k <= F[n - 2]) return process(n - 2, k);
    else return process(n - 1, k - F[n - 2]);
}

void solve(){
    ll n, k; cin>>n>>k;
    cout<<process(n, k)<<endl;
}

int main(){
    ios_base::sync_with_stdio(0); cin.tie();
    fibo();
    int a; cin>>a;
    while(a--){
        solve();
    }
    return 0;
}

 