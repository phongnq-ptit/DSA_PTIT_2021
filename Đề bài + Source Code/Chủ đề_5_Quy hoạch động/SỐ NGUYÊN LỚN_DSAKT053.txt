Cho hai số nguyên lớn N và M có không quá 1000 chữ số. 
Người ta muốn tính xem liệu có thể lấy ra nhiều nhất bao nhiêu chữ số trong N (không cần liên tiếp) 
và giữ nguyên thứ tự của nó để tạo ra một số X sao cho ta cũng có thể tìm thấy X trong số M theo cách tương tự.

Input: 
	Dòng đầu tiên là số lượng bộ test T (T ≤ 20). 
	Mỗi test gồm hai dòng, dòng thứ nhất ghi số N, dòng thứ 2 ghi số M.

Output:  
	Với mỗi test, hãy in ra số chữ số nhiều nhất có thể của X.


Input

2

144615

4976135

44

88

Output

4

0

Giải thích test 1: số X tìm được là 4615.


#include<bits/stdc++.h>

using namespace std;
int dp[1005][1005];

void solve(){
    memset(dp, 0, sizeof(dp));
    string n, m; cin>>n>>m;

    for(int i = 1; i <= n.length(); i++){
        for(int j = 1; j <= m.length(); j++){
            if(n[i - 1] == m[j - 1])
                dp[i][j] = dp[i - 1][j - 1] + 1;
            else 
                dp[i][j] = max(dp[i - 1][j], dp[i][j - 1]);
        }
    }

    cout<<dp[n.length()][m.length()]<<endl;
}

int main(){
    ios_base::sync_with_stdio(0); cin.tie(0);
    int a; cin>>a;
    while(a--){
        solve();
    }
    return 0;
}