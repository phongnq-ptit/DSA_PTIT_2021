Số nhị phân được xem là cách mặc định biểu diễn các số. 
Tuy nhiên, trong nhiều ứng dụng của điện tử và truyền thông lại dùng một biến thể của mã nhị phân đó là mã Gray. 
Mã Gray độ dài n có mã đầu tiên là n số 0, mã kế tiếp của nó là một xâu nhị phân độ dài n khác biệt với xâu trước đó một bít. 
Ví dụ với n=3 ta có 23 mã Gray như sau: 000, 001, 011, 010, 110, 111, 101, 100. 
Hãy viết chương trình chuyển đổi một xâu mã nhị phân X có độ dài n thành một xâu mã Gray.

Input:
	Dòng đầu tiên là số lượng test T.
	T dòng kế tiếp ghi lại mỗi dòng một test. Mỗi test là một xâu nhị phân độ dài n.
	T, n thỏa mãn ràng buộc: 1≤T, n≤10.
Output:
	Đưa ra kết quả mỗi test theo từng dòng.




Input:

2

01001

01101

Output:

01101

01011

 




#include<bits/stdc++.h>

using namespace std;

/*
	in ma gray theo xau nhi phan
	arr[0] giu nguyen
	xet cac vi tri tu i den n (i = 1,2,3,...)
	arr[i - 1] != arr[i] => in ra 1
	arr[i - 1] == arr[i] => in ra 0
*/

void solve(){
	string s; cin>>s;
	
	cout<<s[0];
	for(int i = 1; i < s.length(); i++){
		if(s[i - 1] != s[i]) cout<<"1";
		else cout<<"0";
	}
	cout<<endl;
}

int main(){
	int a; cin>>a; cin.ignore();
	while(a--){
		solve();
	}
	return 0;
}
