Ta gọi số nguyên dương K là một số BDN nếu các chữ số trong K chỉ bao gồm các 0 hoặc 1 có nghĩa. 
Ví dụ số K = 1, 10, 101. Cho số tự nhiên N (N<263). 
Hãy cho biết có bao nhiêu số BDN nhỏ hơn N. 
Ví dụ N=100 ta có 4 số BDN bao gồm các số: 1, 10, 11, 100.

Input:
	Dòng đầu tiên ghi lại số tự nhiên T là số lượng Test;
	T dòng kế tiếp mỗi dòng ghi lại một bộ Test. Mỗi test là một số tự nhiên N.
Output:
	Đưa ra kết quả mỗi test theo từng dòng.
            

Input

3

10

100

200

Output

2

4

7

 

#include<bits/stdc++.h>

using namespace std;
typedef long long ll;

void solve(){
    ll n; cin>>n;
    queue<ll> que; que.push(1);

    int res = 0;
    while(true){
        for(ll i = 0; i <= 1; i++){
            ll tmp = que.front()*10 + i;
            que.push(tmp);
        }
        
        if(que.front() <= n) {
            res++;
            que.pop();
        } else break;
    }

    cout<<res<<endl;
}

int main(){
    int a; cin>>a;
    while(a--){
        solve();
    }
    return 0;
}