Cho hai số nguyên dương S và T (S, T<10000) và hai thao tác (a), (b) dưới đây:

	Thao tác (a): Trừ S đi 1  (S = S-1) ;

	Thao tác (b): Nhân S với 2 ( S = S*2);

Hãy dịch chuyển S thành T sao cho số lần thực hiện các thao tác (a), (b) là ít nhất. 
Ví dụ với    S = 2, T = 5 thì số các bước ít nhất để dịch chuyển S thành T thông qua 4 thao tác sau:

	Thao tác (a): 2*2 = 4;

	Thao tác (b): 4-1 = 3;

	Thao tác (a): 3*2 = 6;

	Thao tác (b): 6-1 = 5;

Input:
	Dòng đầu tiên ghi lại số tự nhiên T là số lượng Test;
	T dòng kế tiếp mỗi dòng ghi lại một bộ Test. Mỗi test là một bộ đôi S và T.
Output: 
	Đưa ra kết quả mỗi test theo từng dòng.


Input

3

2 5

3 7

7 4

Output

4

4

3

 
#include<bits/stdc++.h>

using namespace std;

void solve(){
    int s, t; cin>>s>>t;

    queue<pair<int, int>> que; que.push({s, 0}); 
    map<int, bool> tick; tick[s] = true;

    while(!que.empty()){
        pair<int, int> tmp = que.front(); que.pop();

        int value = tmp.first; 
        int step = tmp.second;

        if(value == t){
            cout<<step<<endl;
            return;
        }
        // thao tác (a)
        if(!tick[value - 1] && value - 1 >= 0){
            que.push({value - 1, step + 1});
            tick[value - 1] = true;
        }
        // thao tác (b)
        if(!tick[value * 2] && value <= t){
            que.push({value * 2, step + 1});
            tick[value * 2] = true;
        }
    }
}

int main(){
    int a; cin>>a;
    while(a--){
        solve();
    }
    return 0;
}