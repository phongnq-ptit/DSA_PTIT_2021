Cho mảng A[] gồm n số nguyên dương. 
Gọi L, R là max và min các phần tử của A[]. 
Nhiệm vụ của bạn là tìm số phần tử cần thiết cần thêm vào mảng để mảng có đầy đủ các số trong khoảng [L, R]. 
Ví dụ A[] = {5, 7, 9, 3, 6, 2 } ta nhận được kết quả là 2 tương ứng với các số còn thiếu là 4, 8.

Input:
	Dòng đầu tiên đưa vào số lượng bộ test T.
	Những dòng kế tiếp đưa vào T bộ test. Mỗi bộ test gồm hai dòng: 
		dòng đầu tiên đưa vào n, tương ứng với số phần tử của mảng A[]; 
		dòng tiếp theo là n số A[i] ; 
		các số được viết cách nhau một vài khoảng trống.
	T, n, A[i] thỏa mãn ràng buộc: 1≤ T ≤100; 1≤ n, A[i] ≤103.
Output:
	Đưa ra kết quả mỗi test theo từng dòng.
Input:

2
5
4 5 3 8 6
3
2 1 3

Output:

1
0
 



#include<bits/stdc++.h>

using namespace std;

void solve(){
    int n; cin>>n; 
    int _max = INT_MIN, _min = INT_MAX;
    vector<int> arr(n);
    for(int i = 0; i < n; i++) {
        cin>>arr[i];
        _max = max(arr[i], _max);
        _min = min(arr[i], _min);
    }
    set<int> tmp(arr.begin(), arr.end());

    cout<< _max - _min + 1 - tmp.size()<<endl;
}

int main(){
    int a; cin>>a;
    while(a--){
        solve();
    }
    return 0;
}

